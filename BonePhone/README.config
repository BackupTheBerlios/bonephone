This Document handles the following terms:

1. Config files in detail
	1.1 .bonephone/bonerc          
		1.1.1 RATPath
		1.1.2 SIPIdentit
		1.1.3 SIPDialDomain
		1.1.4 SIPOutBoundProxy (obsolete)
		1.1.5 SIPDisplayName
		1.1.6 RTPFirstPort
		1.1.7 RTPPorts
		1.1.8 RTPTTL
		1.1.9 IPVersion
		1.1.10 OutputVolume
		1.1.11 InputVolume
		1.1.12 OutputMute
		1.1.13 InputMute
		1.1.14 OutputChannel
		1.1.15 InputChannel
		1.1.16 UpstreamProfile
		1.1.17 DownstreamProfile
		1.1.18 LogoLabel
		1.1.19 LogoImage
		1.1.20 CallPanelStyle
		1.1.21 AutoAnswer
	1.2 .bonephone/phonebook
	1.3 .bonephone/profiles
		1.3.1 File contents
		1.3.2 Why is it so critical to edit this file ?
	1.4 bonephone/configfile
		1.4.1 traceLevel
		1.4.2 enableUDP
		1.4.3 stackHostName 
		1.4.4 stackAddress
		1.4.5 serverLog 
	1.5 bonephone/JAVAHOME

2. Java-conform IP-setup
	2.1 Reasons
	2.2 IP setup
	2.3 dealing with localhost


-------------------------------------------------------------------------------


1. Config files in detail

   All config files are ASCII files and can be edited with your
   favorite text editor (vi,emacs,nano,kedit...). Any information
   in these files is CASE SENSITIVE (upper/lower case matters).
   the files in .bonephone may contain empty lines and comments.
   Comment lines must have a hashmark (#) as the first character.



1.1 .bonephone/bonerc


This file is bonephone's main config file. 
Each key ma appear exactly once.
The following keys are available, mandatory only if marked as.


1.1.1 RATPath (mandatory)

      Syntax:  RATPath: <path>
      Example: RATPath: /home/jfi/rat-4.2.20/rat/rat-4.2.20-media

      <path> is the absolute path to the rat-4.2.20-media executable
      file. This file is shipped in the .tgz archive, so set the
      path to the rat-4.2.20-media file in your bonephone directory.


1.1.2 SIPIdentity (mandatory)

      Syntax:  SIPIdentity: <username>
      Example: SIPIdentity: jfi

      The SIPIdentity defines your username in SIP-URLs.


1.1.3 SIPDialDomain (mandatory)

      Syntax:  SIPDialDomain: <domain>
      Example: SIPDialDOmain: iptel.org
      Example: SIPDialDOmain: [3ffe:0400:0190:0056:0250:04ff:fe56:196b]
      Example: SIPDialDOmain: 192.168.24.201

      The SIPDialDomain defines the domain name used in outgoing SIP
      messages. If you are not using a SIP-proxy you must specify
      your local machines address here as a dot notated IPv4 address
      or a colon separated IPv6 reference (see examples above).
      This will be improved - promise


1.1.4 SIPOutBoundProxy (obsolete)

      not required anymore. Maybe revived in future releases if needed.


1.1.5 SIPDisplayName (optional)

      Syntax:  SIPDisplayName: <displayname>
      Example: SIPDisplayName: Papst Paul XXIV

      The displayname is shipped in the SIP-messages. defaults to 
      SIPIdentity.


1.1.6 RTPFirstPort (mandatory)

      Syntax:  RTPFirstPort: <first-port-to-use>
      Example: RTPFirstPort: 4720

      This defines the first pair of RTP/RTCP ports to use for audio
      stream communication. This port number MUST be even.


1.1.7 RTPPorts (mandatory)

      Syntax:  RTPPorts: <number-of-ports>
      Example: RTPPorts: 40

      Defines the number of ports managed to be used in RTP/RTCP (audio)
      connections. Bonephone cycles through this port space to re-use
      former port numbers as late as possible.


1.1.8 RTPTTL (optional)

      Syntax:  RTPTTL: <time-to-live>
      Example: RTPTTL: 15

      Number of hops a RTP/RTCP packet can pass before getting dropped.
      This applies to multicast sessions only. Multicast audio is not
      supported by bonephone right now, but is easy to implement.


1.1.9 IPVersion (mandatory)

      Syntax:  IPVersion: 4|6
      Example: IPVersion: 4

      Use IPv4 ("normal" IP) or IPv6 ("next-generation" IP). Valid values
      are ONLY 4 and 6. When specifying 6 you need to specify IPv6
      addresses (references) wherever you state an IP address !!!


The following keys are optional and are set by the bonephone at runtime to
reasonable defaults. So you dont need to edit them and they are explained 
in short. In fact you can do harm to the usability of your phone when 
doing something wrong.


1.1.10 OutputVolume: <vol>        # default speaker/headphone volume
1.1.11 InputVolume: <vol>         # default microphone (recording) volume
1.1.12 OutputMute: 1|0            # mute speaker/headphone by default ?
1.1.13 InputMute: 1|0             # mute microphone by default ?
1.1.14 OutputChannel: <channel>   # name of the output channel/plug
                                  # Don't edit by hand, use GUI.
1.1.15 InputChannel: <channel>    # name of the recording channel/plug
                                  # Don't edit by hand, use GUI.
1.1.16 UpstreamProfile: <num>     # number of codec profile to use for
                                  # outgoing SDP information. Please modify
                                  # by GUI, not by hand.
1.1.17 DownstreamProfile: <num>   # number of codec profile to use for
                                  # checking incoming SDP information. 
                                  # Please modify by GUI, not by hand.
1.1.18 LogoLabel: <text-line>     # Text to display in the GUI's headline
1.1.19 LogoImage: <filename>      # filename of the top most Image. 
                                  # path is relative to the ~/bonephone
                                  # directory. GIF and JPEG should work.
                                  # Take care of image size.
1.1.20 CallPanelStyle: <num>      # Number of the Call Displayer. Don't
                                  # edit by hand ....
1.1.21 AutoAnswer: 0|1            # Automatically answer all incoming calls.
                                  # Do not edit -> GUI



1.2 .bonephone/phonebook


This file holds your phonebook. The only valid key here is "Entry:".
This key may of course appear as often as you like.

Syntax:  Entry: <sip-url> <Display name>
Example: Entry: sip:satan@hell.org CEO of hell company
Example: Entry: sip:satan@[3ffe:400:190:56:210:4bff:feb4:e723] Boss (IPv6)
Example: Entry: sip:myboss@192.168.24.201 Joe Cool (private net)

<sip-url> may not contain any whitespace/tabs !!!




1.3 .bonephone/profiles

!!! YOU CAN EASILY DO SOMETHING WRONG HERE !!!


1.3.1 File contents

This file holds additional codec collections (profiles) for codec
negotiation via SDP in SIP messages. A codec consists of a name,
working frequency, number of channels (mono/stereo) and a RTP payload
type. Only pros or programmers should touch this file for testing
certain scenarios.

A new profile starts with the key "Profile:"

Syntax:  Profile: <new-name>
Example: Profile: simple PCMU only

after this initializer a number of codec descriptions may appear using
the "Codec:" key:

Syntax:  Codec: <name> <freq> <channels> <payload>
Example: Codec: PCMU 8000 1 0
Example: Codec: L16 44100 2 11

The profile ends with the next "Profile:" key or EOF.


1.3.2 Why is it so critical to edit this file ?

* If you specify a codec (name freq chan) that is not
  supported by the audio engine, you wont notice that.
  Things will simply not work. In the best case you get an error
  saying that there was no agreement to make with the peer about
  a codec to use.

* You need to set the payload type to a "correct" value.
  "correct" means that you may not interfere with the numbers
  already assigned by IANA. Keep in mind that other phones
  could be unable to re-map their RTP payload types, even if they
  can manage the specified codec.




1.4 bonephone/configfile

This is the configfile read by the NIST-SIP stack.
Consider all listed keys and the ones found in the sample
file mandatory. You need to set the following keys to reasonable 
values:


1.4.1 traceLevel

      Syntax:  traceLevel <level>
      Example: traceLevel 32

      Set the level of debugging output. 32 is maximum verbosity.
      0 is quiteness.


1.4.2 enableUDP

      Syntax:  enableUDP <port>
      Example: enableUDP 5060

      enable UDP and set the portnumber to bind to. 5060 is the
      default SIP port.


1.4.3 stackHostName 

      Syntax:  stackHostName <fqdn>
      Example: stackHostName xhosa.mobis.ip6

      Fully qualified domain name (fqdn) of the system, this program
      is running. Sounds braindead, I know.
      Refer to chapter 2 for more information


1.4.4 stackAddress

      Syntax:  stackAddress <ip-address>
      Example: stackAddress 192.168.34.201
      Example: stackAddress [3ffe:0400:0190:0056:0250:04ff:fe56:196b]

      Address of the local interface to use in SIP messages. Must
      correspond to the value specified as stackHostName above.
      Refer to chapter 2 for more information


1.4.5 serverLog 

      Syntax:  serverLog <filename>
      Example: serverLog myserverlog.txt

      Filename where additional debugging output shall be written.
      Here you will find all received/sent SIP messages.




1.5 bonephone/JAVAHOME

This file is sourced by the run script to determine the location
of the JDK 1.4 installation. It contains only one line which should read

export JAVAHOME=/usr/java/jdk1.4

Change the path to the directory where your jdk 1.4 resides.
Below this directory there must exist the Java runtime environment
(jre/lib) and the Java interpreter (bin/java)
 






2. Java conform IP setup


2.1 Reasons

    To understand why we need to do this, we need to understand how Java
    determines a local interface address. To be able to send a contact
    address in an SDP block, we need to know an interface address where we
    can be reached by the peer. This sounds simple but can lead into 
    trouble when the system is not well configured.
    First Java fetches the hostname of the machine. Then it looks up
    an IP-address for this. The default order to look up a hostname-address
    pair is to first look at the /etc/hosts file and takes the first match, 
    if that failed, then query a DNS server. This order is defined in
    /etc/nsswitch.conf or on older systems /etc/host.conf .
    But what happens when our host has two network cards ?
    One with an official address (global scope) and one with a private 
    address (eg. 192.168.x.y). It happens that java retrieves the wrong
    address for our host (the private one). So we need to influence the 
    order in which the matches appear. 


2.2 IP setup

    Because in most cases we cannot change a DNS servers behaviour on this,
    we need to define this in the /etc/hosts file:

    130.149.31.61     xhosa.fokus.gmd.de   xhosa
    192.168.24.201    xhosa.fokus.gmd.de   xhosa

    This makes sure that the official address is retrieved by Java.

    The same problem arises when using IPv6 with a single homed host. 
    You cannot tell Java to use IPv6 only, you only can set a preference 
    for IPv6 addresses upon name resolution. This means when you have 
    enabled IPv6 and the hostname-address lookup described in 2.1 does 
    not return any IPv6 addresses, you will get the matching IPv4 address.
    To solve this problem you either need an IPv6 capable DNS server or
    set the appropriate information in your /etc/hosts again:

    3ffe:400:190:56:250:4ff:fe56:196b       xhosa.mobis.ip6      xhosa 
    130.149.31.61                           xhosa.fokus.gmd.de   xhosa
    192.168.24.201                          xhosa.fokus.gmd.de   xhosa
    
    The same happens when having two or more IPv6 capable network 
    interfaces in your machine (multi homed host).

    We are working on an application level solution/workaround for this.


2.3 dealing with localhost

    Do not specify something like this in your /etc/hosts:
       ---
    ::1 xhosa.mobis.ip6 xhosa
    127.0.0.1 xhosa.fokus.gmd.de xhosa

    This would define the loopback addresses as your official hostaddress 
    and Java would retrieve this (and ship this !!!) as your contact
    address in an SDP block.
    Entries like the above are made eg. by the SuSe installation routines.
    At install time there is no address assigned, so this can be considered
    a bad hook to have at least any hostaddress.
    The loopback entries should read like this:

    ::1       localhost ipv6-localhost ipv6-loopback
    127.0.0.1 localhost




--------------------------------------------------------------------------------
Author: Jens Fiedler (fiedler@fokus.gmd.de)
